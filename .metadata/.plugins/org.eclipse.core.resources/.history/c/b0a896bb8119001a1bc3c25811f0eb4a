package com.Service;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.Dao.SearchFlightInterface;
import com.dto.SearchFlight;
import com.model.AerothonFlights;

@Service
public class SearchFlightService {

	@Autowired
	SearchFlightInterface searchFlightInterface;
	
	public Map<String, Object> searchFlightFromToLocation(SearchFlight searchFlight) {
		Map<String, Object> map =new HashMap<String, Object>();
		try {
			String fromLocation = searchFlight.getFromLocation();
			String toLocation = searchFlight.getToLocation();
			List<AerothonFlights> flightsList = searchFlightInterface.findAllByFromToLocation(fromLocation, toLocation);
			List<AerothonFlights> availableFlightsList = new ArrayList<>();
			for(AerothonFlights af : flightsList) {
				if(af.getCurrentCapacity()>0) {
					availableFlightsList.add(af);
				}
			}
			
			if(availableFlightsList.size()>0) {
				map.put("success", true);
				map.put("flights", availableFlightsList);
			}else {
				map.put("success", false);
				map.put("message", "To flights found in this route");
			}
		}catch(Exception ex) {
			map.put("success", false);
			map.put("message", "Unable To Process Request");
		}
		return map;
		
	}

	public Map<String, Object> searchFlightFromToLocationAndDepartureDate(SearchFlight searchFlight) {
		Map<String, Object> map =new HashMap<String, Object>();
		try {
			String fromLocation = searchFlight.getFromLocation();
			String toLocation = searchFlight.getToLocation();
			Date departureDate = searchFlight.getDepartureDate();
			List<AerothonFlights> flightsList = searchFlightInterface.findAllByFromToLocationAndDepatureDate(fromLocation, toLocation, departureDate);
			List<AerothonFlights> availableFlightsList = new ArrayList<>();
			for(AerothonFlights af : flightsList) {
				if(af.getCurrentCapacity()>0) {
					availableFlightsList.add(af);
				}
			}
			
			if(availableFlightsList.size()>0) {
				map.put("success", true);
				map.put("flights", availableFlightsList);
			}else {
				map.put("success", false);
				map.put("message", "To flights found in this route");
			}
		}catch(Exception ex) {
			map.put("success", false);
			map.put("message", "Unable To Process Request");
		}
		return map;
		
	}

	public Map<String, Object> getFlightsList() {
		Map<String, Object> map =new HashMap<String, Object>();
		try {
			List<AerothonFlights> fromFlights = searchFlightInterface.findAll();
			map.put("success", true);
			map.put("flights", fromFlights);
		}catch(Exception ex) {
			map.put("success", false);
			map.put("message", "Unable To Process Request");
		}
		return map;
	}
	
}
